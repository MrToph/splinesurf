{"ts":1344705013044,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\r\n\r\n<!doctype html>\r\n<html lang=\"en\">\r\n    <head>\r\n\t\t<title>three.js webgl - geometry - shapes</title>\r\n\t\t<meta charset=\"utf-8\">\r\n\t\t<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\r\n\t\t<style>\r\n\t\t\tbody {\r\n\t\t\t\tfont-family: Monospace;\r\n\t\t\t\tbackground-color: #f0f0f0;\r\n\t\t\t\tmargin: 0px;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t}\r\n\t\t</style>\r\n\t</head>\r\n\t<body>\r\n\t\r\n\t\t<script src=\"js/Three_r49.js\"></script>\r\n\r\n\t\t<!-- where curves formulas are defined -->\r\n\t\t<script src=\"js/CurveExtras.js\"></script>\r\n\r\n\t\t<script src=\"js/Stats.js\"></script>\r\n\r\n\r\n\t\t<script>\r\n\t\tvar container, stats;\r\n\r\n\t\tvar camera, scene, renderer, splineCamera, cameraHelper, cameraEye;\r\n\r\n\t\tvar text, plane;\r\n\r\n\t\tvar targetRotation = 0;\r\n\t\tvar targetRotationOnMouseDown = 0;\r\n\r\n\t\tvar mouseX = 0;\r\n\t\tvar mouseXOnMouseDown = 0;\r\n\r\n\t\tvar windowHalfX = window.innerWidth / 2;\r\n\t\tvar windowHalfY = window.innerHeight / 2;\r\n\r\n\t\tvar binormal = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\tvar formula = 'cos(2*t) * (1 + 0.4*cos(7*t) + 0.485*cos(9*t)), sin(2*t) * (1 + 0.4*cos(7*t) + 0.485*cos(9*t)), 0.3*sin(9*t)';\r\n\t\tvar range = '0, Math.PI*2';\r\n\r\n\t\tvar customCurve, customTorus;\r\n\r\n\t\tfunction processFormula() {\r\n\t\t\tvar xyz = formula.split(',');\r\n\t\t\txyz[0] = 'x = ' + xyz[0] + ';';\r\n\t\t\txyz[1] = 'y = ' + xyz[1] + ';';\r\n\t\t\txyz[2] = 'z = ' + xyz[2] + ';';\r\n\r\n\r\n\t\t\tvar code = 'splines.CustomCurve = new (THREE.Curve.create( function(s) { this.scale = (s === undefined) ? 40 : s; }, function(t) { t = scaleTo(0, Math.PI*2, t); var x, y, z; '\r\n\t\t\t\t+ xyz.join('') + 'return new THREE.Vector3(x, y, z).multiplyScalar(this.scale); } ) );';\r\n\t\t\teval(code);\r\n\t\t}\r\n\r\n\r\n\t\tvar CustomTorusCurve = THREE.Curve.create(\r\n\r\n\t\t\tfunction(p, q, r) {\r\n\t\t\t\tthis.p = p;\r\n\t\t\t\tthis.q = q;\r\n\t\t\t\tthis.r = r;\r\n\t\t\t},\r\n\r\n\t\t\tfunction(t) {\r\n\r\n\t\t\t\tt *= Math.PI * 2;\r\n\r\n\t\t\t\t// var r = 0.5;\r\n\t\t\t\tvar p = this.p, q = this.q, r = this.r;\r\n\r\n\t\t\t\tvar tx = (1 + r * Math.cos(q * t)) * Math.cos(p * t),\r\n\t\t\t\t\tty = (1 + r * Math.cos(q * t)) * Math.sin(p * t),\r\n\t\t\t\t\ttz = r * Math.sin(q * t);\r\n\r\n\t\t\t\treturn new THREE.Vector3(tx, ty, tz).multiplyScalar(20);\r\n\r\n\t\t\t}\r\n\r\n\t\t);\r\n\r\n\r\n\r\n\r\n\t\tvar pipeSpline = new THREE.SplineCurve3([\r\n\t\t\t\tnew THREE.Vector3(0, 10, -10), new THREE.Vector3(10, 0, -10), new THREE.Vector3(20, 0, 0), new THREE.Vector3(30, 0, 10), new THREE.Vector3(30, 0, 20), new THREE.Vector3(20, 0, 30), new THREE.Vector3(10, 0, 30), new THREE.Vector3(0, 0, 30), new THREE.Vector3(-10, 10, 30), new THREE.Vector3(-10, 20, 30), new THREE.Vector3(0, 30, 30), new THREE.Vector3(10, 30, 30), new THREE.Vector3(20, 30, 15), new THREE.Vector3(10, 30, 10), new THREE.Vector3(0, 30, 10), new THREE.Vector3(-10, 20, 10), new THREE.Vector3(-10, 10, 10), new THREE.Vector3(0, 0, 10), new THREE.Vector3(10, -10, 10), new THREE.Vector3(20, -15, 10), new THREE.Vector3(30, -15, 10), new THREE.Vector3(40, -15, 10), new THREE.Vector3(50, -15, 10), new THREE.Vector3(60, 0, 10), new THREE.Vector3(70, 0, 0), new THREE.Vector3(80, 0, 0), new THREE.Vector3(90, 0, 0), new THREE.Vector3(100, 0, 0)]);\r\n\r\n\t\tvar sampleClosedSpline = new THREE.ClosedSplineCurve3([\r\n\t\t\tnew THREE.Vector3(0, -40, -40),\r\n\t\t\tnew THREE.Vector3(0, 40, -40),\r\n\t\t\tnew THREE.Vector3(0, 140, -40),\r\n\t\t\tnew THREE.Vector3(0, 40, 40),\r\n\t\t\tnew THREE.Vector3(0, -40, 40),\r\n\t\t]);\r\n\r\n\t\t// Keep a dictionary of Curve instances\r\n\t\tvar splines = {\r\n\t\t\tGrannyKnot: new THREE.Curves.GrannyKnot(),\r\n\t\t\tHeartCurve: new THREE.Curves.HeartCurve(3.5),\r\n\t\t\tVivianiCurve: new THREE.Curves.VivianiCurve(70),\r\n\t\t\tKnotCurve: new THREE.Curves.KnotCurve(),\r\n\t\t\tHelixCurve: new THREE.Curves.HelixCurve(),\r\n\t\t\tTrefoilKnot: new THREE.Curves.TrefoilKnot(),\r\n\t\t\tTorusKnot: new THREE.Curves.TorusKnot(20),\r\n\t\t\tCinquefoilKnot: new THREE.Curves.CinquefoilKnot(20),\r\n\t\t\tTrefoilPolynomialKnot: new THREE.Curves.TrefoilPolynomialKnot(14),\r\n\t\t\tFigureEightPolynomialKnot: new THREE.Curves.FigureEightPolynomialKnot(),\r\n\t\t\tDecoratedTorusKnot4a: new THREE.Curves.DecoratedTorusKnot4a(),\r\n\t\t\tDecoratedTorusKnot4b: new THREE.Curves.DecoratedTorusKnot4b(),\r\n\t\t\tDecoratedTorusKnot5a: new THREE.Curves.DecoratedTorusKnot5a(),\r\n\t\t\tDecoratedTorusKnot5c: new THREE.Curves.DecoratedTorusKnot5c(),\r\n\t\t\tPipeSpline: pipeSpline,\r\n\t\t\tSampleClosedSpline: sampleClosedSpline,\r\n\t\t\tCustomCurve: null,\r\n\t\t\tCustomTorus: new CustomTorusCurve()\r\n\t\t};\r\n\r\n\t\tprocessFormula();\r\n\r\n\t\textrudePath = new THREE.Curves.TrefoilKnot();\r\n\r\n\t\tvar dropdown = '<select id=\"dropdown\" onchange=\"addTube(this.value)\">';\r\n\r\n\t\tvar s;\r\n\t\tfor ( s in splines ) {\r\n\t\t\tdropdown += '<option value=\"' + s + '\"';\r\n\t\t\tdropdown += '>' + s + '</option>';\r\n\t\t}\r\n\r\n\t\tdropdown += '</select>';\r\n\r\n\t\tvar closed2 = true;\r\n\t\tvar debug = true;\r\n\t\tvar parent;\r\n\t\tvar tube, tubeMesh;\r\n\t\tvar animation = false, lookAhead = false;\r\n\t\tvar scale;\r\n\t\tvar showCameraHelper = false;\r\n\r\n\t\tfunction addTube() {\r\n\r\n\t\t\tvar value = document.getElementById('dropdown').value;\r\n\r\n\t\t\tif (value=='CustomCurve') {\r\n\t\t\t\t \r\n\t\t\t\tvar tmp = prompt('Enter curve formula eg. sin(t),cos(t),cos(t/2)', formula);\r\n\t\t\t\tif (tmp && tmp!=formula) {\r\n\t\t\t\t\tformula = tmp;\r\n\t\t\t\t\tprocessFormula();\r\n\t\t\t\t}\r\n\t\t\t} else if (value == 'CustomTorus') {\r\n\t\t\t\t\r\n\t\t\t\tvar p = prompt('p value', 2);\r\n\t\t\t\tif (p!== undefined) {\r\n\t\t\t\t\tsplines.CustomTorus.p = parseFloat(p);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar q = prompt('q value', 3);\r\n\t\t\t\tif (q!== undefined) {\r\n\t\t\t\t\tsplines.CustomTorus.q = parseFloat(q);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar r = prompt('r value', 0.5);\r\n\t\t\t\tif (r!== undefined) {\r\n\t\t\t\t\tsplines.CustomTorus.r = parseFloat(r);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar segments = parseInt(document.getElementById('segments').value);\r\n\t\t\tclosed2 = document.getElementById('closed').checked;\r\n\t\t\tdebug = document.getElementById('debug').checked;\r\n\r\n\t\t\tvar radiusSegments = parseInt(document.getElementById('radiusSegments').value);\r\n\r\n\t\t\tconsole.log('adding tube', value, closed2, debug, radiusSegments);\r\n\t\t\tif (tubeMesh) parent.remove(tubeMesh);\r\n\r\n\t\t\textrudePath = splines[value];\r\n\t\t\t\r\n\t\t\ttube = new THREE.TubeGeometry(extrudePath, segments, 2, radiusSegments, closed2, debug);\r\n\r\n\t\t\taddGeometry(tube, 0xff00ff);\r\n\t\t\tsetScale();\r\n\t\t\r\n\t\t}\r\n\r\n\t\tfunction setScale() {\r\n\r\n\t\t\tscale = parseInt(document.getElementById('scale').value);\r\n\t\t\ttubeMesh.scale.set(scale, scale, scale);\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction addGeometry(geometry, color) {\r\n\r\n\t\t\t\t// 3d shape\r\n\t\t\t\ttubeMesh = THREE.SceneUtils.createMultiMaterialObject(geometry, [\r\n\t\t\t\t\tnew THREE.MeshLambertMaterial({\r\n\t\t\t\t\t\t\tcolor: color,\r\n\t\t\t\t\t\t\topacity: (geometry.debug) ? 0.2 : 0.8,\r\n\t\t\t\t\t\t\ttransparent: true\r\n\t\t\t\t\t}),\r\n\t\t\t\t new THREE.MeshBasicMaterial({\r\n\t\t\t\t\t\tcolor: 0x000000,\r\n\t\t\t\t\t\topacity: 0.5,\r\n\t\t\t\t\t\twireframe: true\r\n\t\t\t\t})]);\r\n\r\n\t\t\t\tif (geometry.debug) tubeMesh.add(geometry.debug);\r\n\r\n\t\t\t\t//mesh.children[0].doubleSided = true;\r\n\t\t\t\tparent.add(tubeMesh);\r\n\r\n\t\t}\r\n\r\n\t\tfunction animateCamera(toggle) {\r\n\r\n\t\t\tif (toggle) {\r\n\t\t\t\tanimation = !animation;\r\n\t\t\t\tdocument.getElementById('animation').value = 'Camera Spline Animation View: ' + (animation? 'ON': 'OFF');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlookAhead = document.getElementById('lookAhead').checked;\r\n\r\n\t\t\tshowCameraHelper = document.getElementById('cameraHelper').checked;\r\n\r\n\t\t\tcameraHelper.children[0].visible = showCameraHelper;\r\n\t\t\tcameraEye.visible = showCameraHelper;\r\n\t\t}\r\n\r\n\r\n\t\tinit();\r\n\t\tanimate();\r\n\r\n\t\tfunction init() {\r\n\r\n\t\t\tcontainer = document.createElement('div');\r\n\t\t\tdocument.body.appendChild(container);\r\n\r\n\t\t\tvar info = document.createElement('div');\r\n\t\t\tinfo.style.position = 'absolute';\r\n\t\t\tinfo.style.top = '10px';\r\n\t\t\tinfo.style.width = '100%';\r\n\t\t\tinfo.style.textAlign = 'center';\r\n\t\t\tinfo.innerHTML = 'Spline Extrusion Examples by <a href=\"http://www.lab4games.net/zz85/blog\">zz85</a><br/>Select spline:';\r\n\r\n\t\t\tinfo.innerHTML += dropdown;\r\n\r\n\t\t\tinfo.innerHTML += '<br/>Scale: <select id=\"scale\" onchange=\"setScale()\"><option>1</option><option>2</option><option selected>4</option><option>6</option><option>10</option></select>';\r\n\t\t\tinfo.innerHTML += '<br/>Extrusion Segments: <select onchange=\"addTube()\" id=\"segments\"><option>50</option><option selected>100</option><option>200</option><option>400</option></select>';\r\n\t\t\tinfo.innerHTML += '<br/>Radius Segments: <select id=\"radiusSegments\" onchange=\"addTube()\"><option>1</option><option>2</option><option selected>3</option><option>4</option><option>5</option><option>6</option><option>8</option><option>12</option></select>';\r\n\t\t\tinfo.innerHTML += '<br/>Debug normals: <input id=\"debug\" type=\"checkbox\" onchange=\"addTube()\"  /> Closed:<input id=\"closed\" onchange=\"addTube()\" type=\"checkbox\" checked />';\r\n\r\n\t\t\tinfo.innerHTML += '<br/><br/><input id=\"animation\" type=\"button\" onclick=\"animateCamera(true)\" value=\"Camera Spline Animation View: OFF\"/><br/> Look Ahead <input id=\"lookAhead\" type=\"checkbox\" onchange=\"animateCamera()\" /> Camera Helper <input id=\"cameraHelper\" type=\"checkbox\" onchange=\"animateCamera()\" />';\r\n\r\n\t\t\tcontainer.appendChild(info);\r\n\r\n\t\t\tscene = new THREE.Scene();\r\n\r\n\t\t\t// \r\n\t\t\tcamera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.01, 1000);\r\n\t\t\tsplineCamera = new THREE.PerspectiveCamera(84, window.innerWidth / window.innerHeight, 0.01, 1000);\r\n\t\t\tcameraHelper = new THREE.CameraHelper(splineCamera);\r\n\r\n\t\t\tcamera.position.set(0, 80, 500);\r\n\t\t\t\r\n\t\t\tscene.add(camera);\r\n\r\n\t\t\t\r\n\t\t\tvar light = new THREE.DirectionalLight(0xffffff);\r\n\t\t\tlight.position.set(0, 0, 1);\r\n\t\t\tscene.add(light);\r\n\r\n\t\t\tparent = new THREE.Object3D();\r\n\t\t\tparent.position.y = 100;\r\n\t\t\tscene.add(parent);\r\n\r\n\t\t\taddTube();\r\n\r\n\t\t\t// Debug point\r\n\t\t\tcameraEye = new THREE.Mesh(new THREE.SphereGeometry(5), new THREE.MeshBasicMaterial({\r\n\t\t\t\t\tcolor: 0xdddddd\r\n\t\t\t}));\r\n\r\n\t\t\tcameraHelper.children[0].visible = showCameraHelper;\r\n\t\t\tcameraEye.visible = showCameraHelper;\r\n\r\n\t\t\tparent.add(cameraEye);\r\n\r\n\t\t\tcameraHelper.scale.multiplyScalar(0.1);\r\n\t\t\tsplineCamera.add(cameraHelper);\r\n\t\t\tparent.add(splineCamera);\r\n\r\n\t\t\t//\r\n\t\t\trenderer = new THREE.WebGLRenderer({\r\n\t\t\t\t\tantialias: true\r\n\t\t\t});\r\n\t\t\trenderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n\t\t\tcontainer.appendChild(renderer.domElement);\r\n\r\n\t\t\tstats = new Stats();\r\n\t\t\tstats.domElement.style.position = 'absolute';\r\n\t\t\tstats.domElement.style.top = '0px';\r\n\t\t\tcontainer.appendChild(stats.domElement);\r\n\r\n\t\t\trenderer.domElement.addEventListener('mousedown', onDocumentMouseDown, false);\r\n\t\t\trenderer.domElement.addEventListener('touchstart', onDocumentTouchStart, false);\r\n\t\t\trenderer.domElement.addEventListener('touchmove', onDocumentTouchMove, false);\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction onDocumentMouseDown(event) {\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\trenderer.domElement.addEventListener('mousemove', onDocumentMouseMove, false);\r\n\t\t\trenderer.domElement.addEventListener('mouseup', onDocumentMouseUp, false);\r\n\t\t\trenderer.domElement.addEventListener('mouseout', onDocumentMouseOut, false);\r\n\r\n\t\t\tmouseXOnMouseDown = event.clientX - windowHalfX;\r\n\t\t\ttargetRotationOnMouseDown = targetRotation;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onDocumentMouseMove(event) {\r\n\r\n\t\t\tmouseX = event.clientX - windowHalfX;\r\n\r\n\t\t\ttargetRotation = targetRotationOnMouseDown + (mouseX - mouseXOnMouseDown) * 0.02;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onDocumentMouseUp(event) {\r\n\r\n\t\t\trenderer.domElement.removeEventListener('mousemove', onDocumentMouseMove, false);\r\n\t\t\trenderer.domElement.removeEventListener('mouseup', onDocumentMouseUp, false);\r\n\t\t\trenderer.domElement.removeEventListener('mouseout', onDocumentMouseOut, false);\r\n\r\n\t\t}\r\n\r\n\t\tfunction onDocumentMouseOut(event) {\r\n\r\n\t\t\trenderer.domElement.removeEventListener('mousemove', onDocumentMouseMove, false);\r\n\t\t\trenderer.domElement.removeEventListener('mouseup', onDocumentMouseUp, false);\r\n\t\t\trenderer.domElement.removeEventListener('mouseout', onDocumentMouseOut, false);\r\n\r\n\t\t}\r\n\r\n\t\tfunction onDocumentTouchStart(event) {\r\n\r\n\t\t\tif (event.touches.length == 1) {\r\n\r\n\t\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t\tmouseXOnMouseDown = event.touches[0].pageX - windowHalfX;\r\n\t\t\t\t\ttargetRotationOnMouseDown = targetRotation;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onDocumentTouchMove(event) {\r\n\r\n\t\t\tif (event.touches.length == 1) {\r\n\r\n\t\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t\tmouseX = event.touches[0].pageX - windowHalfX;\r\n\t\t\t\t\ttargetRotation = targetRotationOnMouseDown + (mouseX - mouseXOnMouseDown) * 0.05;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction animate() {\r\n\r\n\t\t\trequestAnimationFrame(animate);\r\n\r\n\t\t\trender();\r\n\t\t\tstats.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction render() {\r\n\r\n\t\t\t// Try Animate Camera Along Spline\r\n\t\t\tvar time = Date.now();\r\n\t\t\tvar looptime = 20 * 1000;\r\n\t\t\tvar t = (time % looptime) / looptime;\r\n\r\n\t\t\tvar pos = tube.path.getPointAt(t);\r\n\t\t\tpos.multiplyScalar(scale);\r\n\r\n\t\t\t// interpolation\r\n\t\t\tvar segments = tube.tangents.length;\r\n\t\t\tvar pickt = t * segments;\r\n\t\t\tvar pick = Math.floor(pickt);\r\n\t\t\tvar pickNext = (pick + 1) % segments;\r\n\r\n\t\t\tbinormal.sub(tube.binormals[pickNext], tube.binormals[pick]);\r\n\t\t\tbinormal.multiplyScalar(pickt - pick).addSelf(tube.binormals[pick]);\r\n\r\n\r\n\t\t\tvar dir = tube.path.getTangentAt(t);\r\n\r\n\t\t\tvar offset = 15;\r\n\r\n\t\t\tnormal.copy(binormal).crossSelf(dir);\r\n\r\n\t\t\t// We move on a offset on its binormal\r\n\t\t\tpos.addSelf(normal.clone().multiplyScalar(offset));\r\n\r\n\t\t\tsplineCamera.position = pos;\r\n\t\t\tcameraEye.position = pos;\r\n\r\n\r\n\t\t\t// Camera Orientation 1 - default look at\r\n\t\t\t// splineCamera.lookAt(lookAt);\r\n\r\n\t\t\t// Using arclength for stablization in look ahead.\r\n\t\t\tvar lookAt = tube.path.getPointAt((t + 30/tube.path.getLength()) % 1).multiplyScalar(scale);\r\n\t\t\t\r\n\t\t\t// Camera Orientation 2 - up orientation via normal\r\n\t\t\tif (!lookAhead)\r\n\t\t\tlookAt.copy(pos).addSelf(dir);\r\n\t\t\tsplineCamera.matrix.lookAt(splineCamera.position, lookAt, normal);\r\n\t\t\tsplineCamera.rotation.getRotationFromMatrix(splineCamera.matrix);\r\n\r\n\t\t\tcameraHelper.update();\r\n\r\n\t\t\tparent.rotation.y += (targetRotation - parent.rotation.y) * 0.05;\r\n\r\n\t\t\tif (animation) {\r\n\r\n\t\t\t\trenderer.render(scene, splineCamera);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render(scene, camera);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t</script>\r\n\t<script type=\"text/javascript\">\r\n\r\n\t\tvar _gaq = _gaq || [];\r\n\t\t_gaq.push(['_setAccount', 'UA-7549263-1']);\r\n\t\t_gaq.push(['_trackPageview']);\r\n\r\n\t\t(function() {\r\n\t\t\tvar ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\r\n\t\t\tga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\r\n\t\t\tvar s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\r\n\t\t})();\r\n\r\n\t</script>\r\n\t</body>\r\n</html>\r\n"]],"start1":0,"start2":0,"length1":0,"length2":14410}]],"length":14410}
